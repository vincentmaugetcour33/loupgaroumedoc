security:
    encoders:
        #Symfony\Component\Security\Core\User\User: plaintext
        VM\UserBundle\Entity\User: sha512
        
    role_hierarchy:
        ROLE_ADMIN:      ROLE_USER
        #ROLE_ADMIN:       ROLE_AUTEUR, ROLE_MODERATEUR
        
        #ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        main:
          id: fos_user.user_provider.username
          #entity: { class: Vm\UserBundle\Entity\User, property: username }
        #in_memory:
            #memory:
              #  users:
               #     user:  { password: userpass, roles: [ 'ROLE_AUTEUR' ] }
                #    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
          pattern : ^/
          anonymous: true
          #provider: in_memory
          provider: main
          form_login:
            login_path: fos_user_security_login
            check_path: fos_user_security_check
          logout:
            path: fos_user_security_logout
            #target: /blog
          remember_me:
            key:        %secret%  
        
        login:
            pattern:  ^/demo/secured/login$
            security: false

        secured_area:
            pattern:    ^/demo/secured/
            form_login:
                check_path: _security_check
                login_path: _demo_login
            logout:
                path:   _demo_logout
                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
